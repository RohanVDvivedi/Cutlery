 STAGE - 2
 * implement expand_and_reash_hashmap inside cutlery for expanding hashmap and repeat previous step for hashmap in testcases of cutlery, BufferPool, Cashed, JSONParser, Serc
 * implement a stdlib c memory_allocator

 STAGE - 3
 * use graph descriptor interface to build graph algorithms like :
       * dfs (iterative only (not recursive) with Cutlery stack)
       * bfs (iterative only with Cutlery queue)
       * bellmanford
       * dijkstra
       * floydwarshall
       * A*-star
       * minimum spanning tree
        etc (more will be added)

 STAGE - 4
 * integrate memory_allocator with other Cutlery datastructures that need memory management like the array and (hashmap, stack, queue and heap)
 * use a global memory allocator for dstring, that can be set by someone

 STAGE - 5
 * provide a very simple trie data structure, to store of dstring* vs void*. (* very far in the future)

 STAGE - 6
 * convert all print functions to dstring based serializers using snprintf_dstring()
 * allow all print functions to serialize in debug and non debug modes
