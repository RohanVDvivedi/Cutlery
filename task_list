 STAGE - 1.1
 * implement expand_and_reash_hashmap inside cutlery for expanding hashmap and remove rehashing functions from testcases of cutlery and its dependencies : BufferPool, Cashed, JSONParser, Serc
 * provide expand_array_addional_size functions to expand array and other dependent datastructures to control memory allocation in a more controlled and flexible way
 * provide a function to set all cutlery data structure's container pointer memory pointer to static memory or to pre-allocated memory locations

(fix return types)
 STAGE - 1.2
 * start using char[] instead of uint8_t[] for bitmaps -> get rid of <stdint.h>
 * remove const returns when returning user's data from all of get_* functions of cutlery data structures
 * fix dependencies for above changes of this stage

(building new simple data structures)
 STAGE - 2
 * provide a bloom_filter, based on the implementation of cutlery's bitmap datastructure
 * provide a very simple trie data structure, to insert/search dstring* vs void*
 * provide a circular io_buffer queue datastructure to enable managing input/output data queues, necessary for buiding network stacks

(long term implementation for all additional find functions to work on)
 STAGE - 3.1
 * implement find_all functions for bst and hashmap
 * implement find_in_range function for bst

(long term implementation for all graph algorithms)
 STAGE - 3.2
 * use graph descriptor interface to build graph algorithms like :
       * dfs (iterative only (not recursive) with Cutlery stack)
       * bfs (iterative only with Cutlery queue)
       * bellmanford
       * dijkstra
       * floydwarshall
       * A*-star
       * minimum spanning tree
        etc (more will be added)

(fix print functions)
 STAGE - 4
 * convert all print functions to dstring based serializers using snprintf_dstring(), also with debug_print and tab_count as input parameters -> get rid of <stdio.h>
